{"version":3,"sources":["components/styled-components/Button.js","components/styled-components/ContentBox.js","components/styled-components/Input.js","components/styled-components/Label.js","components/styled-components/FormField.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","styles/theme.js","styles/globalStyles.js","index.js"],"names":["Button","styled","button","props","size","bg","theme","primaryTextColor","primaryBgColor","invertedTextColor","invertedBgColor","position","ContentBox","div","Input","input","accentColor","Label","label","FormField","Form","withComponent","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","newContact","id","uuidv4","preventDefault","onSubmit","reset","this","type","pattern","title","required","onChange","React","Component","Filter","filter","ContactList","contacts","onClick","handleDelBtn","map","App","updateFilter","addNewContact","find","contact","trim","alert","prevState","deleteContact","contactId","findIndex","updatedContacts","splice","filterContacts","toLowerCase","includes","localContacts","JSON","parse","localStorage","getItem","prevProps","length","setItem","stringify","filteredContacts","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59e68632.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  ${props => {\r\n    switch (props.size) {\r\n      case 'small':\r\n        return 'height: 14px; min-width: 40px; font-size: 12px;';\r\n      case 'large':\r\n        return 'height: 30px; min-width: 140px; font-size: 20px;';\r\n      default:\r\n        return 'height: 24px; min-width: 100px; font-size: 16px;';\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.bg === 'light') {\r\n      return `color: ${props.theme.primaryTextColor}; background-color: ${props.theme.primaryBgColor};`;\r\n    }\r\n    if (props.bg === 'dark') {\r\n      return `color: ${props.theme.invertedTextColor}; background-color: ${props.theme.invertedBgColor};`;\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    switch (props.position) {\r\n      case 'bottom':\r\n        return 'margin-top: 5px;';\r\n      case 'right':\r\n        return 'margin-left: 10px;';\r\n      case 'left':\r\n        return 'margin-rigth: 10px;';\r\n      default:\r\n        return 'margin: 0;';\r\n    }\r\n  }}\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 10px 0px\r\n    ${props => {\r\n      if (props.bg === 'light') {\r\n        return ` ${props.theme.primaryBgColor};`;\r\n      }\r\n      if (props.bg === 'dark') {\r\n        return ` ${props.theme.invertedBgColor};`;\r\n      }\r\n    }}\r\n      }};\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ContentBox = styled.div`\r\n  width: 300px;\r\n  padding: 15px;\r\n  background-color: ${props => props.theme.invertedBgColor};\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 12px -2px ${props => props.theme.invertedBgColor};\r\n`;\r\n\r\nexport default ContentBox;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  border-radius: 5px;\r\n  border: 2px solid transparent;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border-color: ${props => props.theme.accentColor};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n  color: ${props => props.theme.invertedTextColor};\r\n`;\r\n\r\nexport default Label;\r\n","import styled from 'styled-components';\r\n\r\nconst FormField = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Button from '../styled-components/Button';\r\nimport ContentBox from '../styled-components/ContentBox';\r\nimport Input from '../styled-components/Input';\r\nimport Label from '../styled-components/Label';\r\nimport FormField from '../styled-components/FormField';\r\n\r\nconst Form = ContentBox.withComponent('form');\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const id = uuidv4();\r\n    const newContact = { name, number, id };\r\n\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormField>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n        </FormField>\r\n        <Button type=\"submit\" bg=\"light\" position=\"bottom\">\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport ContentBox from '../styled-components/ContentBox';\r\nimport Label from '../styled-components/Label';\r\nimport Input from '../styled-components/Input';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <ContentBox>\r\n    <Label>\r\n      Find contacts by name\r\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n    </Label>\r\n  </ContentBox>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport Button from '../styled-components/Button';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  const handleDelBtn = event => {\r\n    const { name } = event.target;\r\n    onClick(name);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name} {number}\r\n          <Button\r\n            type=\"button\"\r\n            name={id}\r\n            onClick={handleDelBtn}\r\n            size=\"small\"\r\n            bg=\"dark\"\r\n            position=\"right\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (localContacts) {\r\n      this.setState({ contacts: localContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (contacts.length !== prevState.contacts.length) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  updateFilter = event => {\r\n    const { value } = event.target;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  addNewContact = newContact => {\r\n    const { contacts } = this.state;\r\n    const isInContacts = contacts.find(\r\n      contact => contact.name.trim() === newContact.name.trim(),\r\n    );\r\n\r\n    isInContacts\r\n      ? alert(`${newContact.name.trim()} is already in contacts`)\r\n      : this.setState(prevState => ({\r\n          contacts: [newContact, ...prevState.contacts],\r\n        }));\r\n  };\r\n\r\n  deleteContact = id => {\r\n    const { contacts } = this.state;\r\n    const contactId = contacts.findIndex(contact => contact.id === id);\r\n\r\n    this.setState(prevState => {\r\n      const updatedContacts = [...prevState.contacts];\r\n      updatedContacts.splice(contactId, 1);\r\n\r\n      return {\r\n        contacts: updatedContacts,\r\n      };\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts } = this.state;\r\n    const filter = this.state.filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.filterContacts();\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addNewContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.updateFilter} />\r\n        <ContactList contacts={filteredContacts} onClick={this.deleteContact} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export const primaryBgColor = '#e3dcd2';\r\nexport const invertedBgColor = '#013328';\r\nexport const invertedTextColor = '#e3dcd2';\r\nexport const primaryTextColor = '#0f2405';\r\nexport const accentColor = '#cc8b65';\r\n","import { createGlobalStyle } from 'styled-components/macro';\r\n\r\nexport default createGlobalStyle`\r\nbody {\r\n  padding: 10px;\r\n  color: ${props => props.theme.primaryTextColor};\r\n  background-color:  ${props => props.theme.primaryBgColor};\r\n}\r\n\r\nli {\r\n  line-height: 1.8;\r\n}`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { ThemeProvider } from 'styled-components';\nimport * as theme from './styles/theme.js';\nimport GlobalStyle from './styles/globalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}